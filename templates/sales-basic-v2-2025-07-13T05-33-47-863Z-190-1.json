{
  "name": "Sales Automation - Basic",
  "description": "üöÄ Sales Automation - Basic\n\nEinfacher Einstiegs-Workflow f√ºr grundlegende Automatisierung\n\nüìä TEMPLATE-DETAILS:\n‚Ä¢ Komplexit√§t: BASIC (Level 1/3)\n‚Ä¢ Nodes: 3 \n‚Ä¢ Setup-Zeit: 5-10 Minuten\n‚Ä¢ Zielgruppe: Anf√§nger-freundlich\n‚Ä¢ Voraussetzungen: Keine Vorkenntnisse erforderlich\n\nüéØ FUNKTIONALIT√ÑT:\nAutomatisiert sales-Prozesse durch intelligente Datenverarbeitung, \nWebhook-Integration und erweiterte Workflow-Logik. Ideal f√ºr anf√§nger-freundlich \nBenutzer, die ihre sales-Abl√§ufe optimieren m√∂chten.\n\n‚ö° KI-OPTIMIERT: Generiert mit gpt-4-turbo f√ºr maximale Effizienz und Benutzerfreundlichkeit.",
  "userInstructions": "üìã BENUTZER-ANLEITUNG: Sales Automation\n\nüéØ WAS DIESER WORKFLOW MACHT:\nAutomatisiert Ihre sales-Prozesse durch:\n‚Ä¢ Empfang von Daten √ºber Webhook\n‚Ä¢ Intelligente Verarbeitung und Validierung  \n‚Ä¢ Automatische Weiterleitung bei Erfolg\n\nüë§ F√úR WEN IST DAS:\nAnf√§nger-freundlich - Keine Vorkenntnisse erforderlich\n\n‚ö° SO VERWENDEN SIE DEN WORKFLOW:\n\n1Ô∏è‚É£ AKTIVIERUNG:\n   ‚Ä¢ Workflow √∂ffnen und auf \"Aktivieren\" klicken\n   ‚Ä¢ Webhook-URL aus dem ersten Node kopieren\n\n2Ô∏è‚É£ DATEN SENDEN:\n   ‚Ä¢ POST-Request an die Webhook-URL senden\n   ‚Ä¢ JSON-Format verwenden:\n     {\n       \"data\": \"Ihre sales-Daten\",\n       \"priority\": \"normal\",\n       \"source\": \"Ihr System\"\n     }\n\n3Ô∏è‚É£ ERGEBNIS PR√úFEN:\n   ‚Ä¢ Workflow-Ausf√ºhrungen im Dashboard √ºberwachen\n   ‚Ä¢ Bei Erfolg: Status \"success\" in den Logs\n   ‚Ä¢ Bei Fehlern: Detaillierte Fehlermeldungen verf√ºgbar\n\n‚è±Ô∏è SETUP-ZEIT: 5-10 Minuten\nüîß ANPASSUNGEN: Webhook-Pfad und Verarbeitungslogik nach Bedarf √§ndern\nüìû SUPPORT: Community-Forum f√ºr Fragen und Hilfe",
  "technicalInstructions": "üîß TECHNISCHE SETUP-ANLEITUNG: Sales Automation\n\n‚öôÔ∏è SYSTEM-ANFORDERUNGEN:\n‚Ä¢ N8N Version: 1.0+ \n‚Ä¢ Node-Types: webhook, function, if\n‚Ä¢ Berechtigungen: Workflow aktivieren/deaktivieren\n‚Ä¢ Speicher: Minimal (3 Nodes)\n\nüöÄ INSTALLATION & KONFIGURATION:\n\n1Ô∏è‚É£ IMPORT:\n   ‚Ä¢ Template-JSON in N8N importieren\n   ‚Ä¢ Workflow-Name anpassen falls gew√ºnscht\n   ‚Ä¢ Tags hinzuf√ºgen f√ºr bessere Organisation\n\n2Ô∏è‚É£ WEBHOOK-KONFIGURATION:\n   ‚Ä¢ Webhook-Node √∂ffnen\n   ‚Ä¢ Pfad: \"sales-automation\"\n   ‚Ä¢ Methode: POST\n   ‚Ä¢ Response-Mode: \"onReceived\"\n   \n3Ô∏è‚É£ FUNCTION-NODE ANPASSUNG:\n   ‚Ä¢ Verarbeitungslogik nach Business-Rules anpassen\n   ‚Ä¢ Logging-Level je nach Umgebung setzen\n   ‚Ä¢ Error-Handling f√ºr spezifische Use-Cases erweitern\n\n4Ô∏è‚É£ IF-NODE KONFIGURATION:\n   ‚Ä¢ Success-Bedingung: {{ $json.status }} === 'success'\n   ‚Ä¢ Erweiterte Bedingungen bei Bedarf hinzuf√ºgen\n   ‚Ä¢ Routing f√ºr Error-Cases definieren\n\nüîç MONITORING & DEBUGGING:\n‚Ä¢ Execution-Logs in N8N Dashboard pr√ºfen\n‚Ä¢ Webhook-Calls √ºber Browser/Postman testen\n‚Ä¢ Performance-Metriken bei hohem Durchsatz √ºberwachen\n\nüîê SICHERHEIT:\n‚Ä¢ Webhook-URL geheim halten\n‚Ä¢ Input-Validierung in Function-Node\n‚Ä¢ Rate-Limiting bei √∂ffentlicher Exposure\n\n‚ö° PERFORMANCE-OPTIMIERUNG:\n‚Ä¢ Execute-Once bei Single-Item-Processing\n‚Ä¢ Batch-Processing f√ºr hohe Datenmengen\n‚Ä¢ Caching f√ºr wiederholte Operationen\n\nüìà KOMPLEXIT√ÑT: BASIC \nüéØ Erwartete Anpassungszeit: 5-10 Minuten",
  "tags": [
    "sales",
    "basic",
    "ai-generated",
    "automated",
    "level-1",
    "nodes-3"
  ],
  "category": "Business Operations",
  "subcategory": "Sales",
  "complexity": "basic",
  "complexityLevel": 1,
  "active": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sales-automation",
        "responseMode": "onReceived",
        "options": {}
      },
      "name": "Sales Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "id": "sales-webhook"
    },
    {
      "parameters": {
        "functionCode": "// Sales Processing Engine - BASIC\ntry {\n  const inputData = $json;\n  const ts = new Date().toISOString();\n  \n  console.log('Processing Sales data (basic):', inputData);\n  \n  // Basic Processing Logic\n  const result = {\n    status: 'success',\n    processedAt: ts,\n    category: 'Sales',\n    subcategory: 'Business Operations',\n    complexity: 'basic',\n    level: 1,\n    data: inputData,\n    processed: true,\n    workflow: 'Sales Automation - Basic',\n    \n  };\n  \n  console.log('Sales processing completed successfully (basic)');\n  return { json: result };\n  \n} catch (error) {\n  console.error('Sales processing error (basic):', error);\n  return {\n    json: {\n      status: 'error',\n      error: error.message,\n      ts: new Date().toISOString(),\n      category: 'Sales',\n      complexity: 'basic'\n    }\n  };\n}"
      },
      "name": "Sales Processor",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        460,
        300
      ],
      "id": "sales-processor"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.status }}",
              "rightValue": "success",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "name": "Success Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        680,
        300
      ],
      "id": "success-check"
    }
  ],
  "connections": {
    "Sales Webhook": {
      "main": [
        [
          {
            "node": "Sales Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sales Processor": {
      "main": [
        [
          {
            "node": "Success Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "metadata": {
    "version": "2.0.0",
    "author": "Enhanced AI Template Generator",
    "created": "2025-07-13T05:33:47.814Z",
    "aiGenerated": true,
    "aiModel": "gpt-4-turbo",
    "templateNumber": 1,
    "totalTemplates": 3,
    "nodeCount": 3,
    "setupTime": "5-10 Minuten",
    "technicalLevel": "Anf√§nger-freundlich",
    "enhancement": {
      "hasDescription": true,
      "hasUserInstructions": true,
      "hasTechnicalInstructions": true,
      "hasComplexityLevels": true
    }
  },
  "validation": {
    "validated": true,
    "qualityScore": 0.9999999999999999,
    "validationPassed": true
  }
}